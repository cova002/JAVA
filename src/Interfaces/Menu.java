/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interfaces;

import consultorio.Cita;
import consultorio.Doctor;
import consultorio.Paciente;
import consultorio.XMLManager;
import java.io.IOException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;


public class Menu extends javax.swing.JFrame {

    private XMLManager manager;
    private ArrayList<Paciente> pacientes;
    private ArrayList<Doctor> doctores;
    private ArrayList<Cita> citas;


    public Menu() {
        try {
            manager = new XMLManager();
        } catch (IOException ex) {
            Logger.getLogger(Menu.class.getName()).log(Level.SEVERE, null, ex);
            System.err.println("No se pudo escribir el arhcivo database.xml, revisa los permisos");
        }
        pacientes = manager.getPacientes();
        doctores = manager.getDoctores();
        citas = manager.getCitas();
        initComponents();
        this.setResizable(false);
        this.setLocationRelativeTo(null);
        updateTables();
        this.setVisible(true);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton4 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        citasArea = new javax.swing.JTextArea();
        pacienteBtn = new javax.swing.JButton();
        doctorBtn = new javax.swing.JButton();
        citaBtn = new javax.swing.JButton();
        saveNQuitBtn = new javax.swing.JButton();
        saveBtn = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        doctoresArea = new javax.swing.JTextArea();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        pacientesArea = new javax.swing.JTextArea();

        jButton4.setText("jButton4");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("ADMINISTRADOR");

        jLabel2.setText("Citas");

        citasArea.setEditable(false);
        citasArea.setColumns(20);
        citasArea.setRows(5);
        jScrollPane1.setViewportView(citasArea);

        pacienteBtn.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        pacienteBtn.setText("Nuevo Paciente");
        pacienteBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pacienteBtnActionPerformed(evt);
            }
        });

        doctorBtn.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        doctorBtn.setText("Nuevo Doctor");
        doctorBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                doctorBtnActionPerformed(evt);
            }
        });

        citaBtn.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        citaBtn.setText("Nueva Cita");
        citaBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                citaBtnActionPerformed(evt);
            }
        });

        saveNQuitBtn.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        saveNQuitBtn.setText("Guardar y Salir");
        saveNQuitBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveNQuitBtnActionPerformed(evt);
            }
        });

        saveBtn.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        saveBtn.setText("Guardar");
        saveBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveBtnActionPerformed(evt);
            }
        });

        jLabel3.setText("Doctores");

        doctoresArea.setEditable(false);
        doctoresArea.setColumns(20);
        doctoresArea.setRows(5);
        jScrollPane2.setViewportView(doctoresArea);

        jLabel4.setText("Pacientes");

        pacientesArea.setEditable(false);
        pacientesArea.setColumns(20);
        pacientesArea.setRows(5);
        jScrollPane3.setViewportView(pacientesArea);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 635, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 57, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(pacienteBtn, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(doctorBtn, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(citaBtn, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 635, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addGap(214, 214, 214)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 635, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(saveNQuitBtn, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(saveBtn, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(pacienteBtn)
                        .addGap(18, 18, 18)
                        .addComponent(doctorBtn)
                        .addGap(18, 18, 18)
                        .addComponent(citaBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(saveNQuitBtn)
                        .addGap(18, 18, 18)
                        .addComponent(saveBtn)))
                .addContainerGap(21, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void pacienteBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pacienteBtnActionPerformed
        String nombre = JOptionPane.showInputDialog(null, "Introduce el nombre completo del paciente");
        if (nombre == null || nombre.equals("")) {
        } else {
            pacientes.add(new Paciente("" + (pacientes.size() + 1), nombre));
            updateTables();
        }
    }//GEN-LAST:event_pacienteBtnActionPerformed

    private void saveNQuitBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveNQuitBtnActionPerformed
        manager.saveChanges(pacientes, doctores, citas);
        System.exit(0);
    }//GEN-LAST:event_saveNQuitBtnActionPerformed

    private void saveBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveBtnActionPerformed
        manager.saveChanges(pacientes, doctores, citas);
    }//GEN-LAST:event_saveBtnActionPerformed

    private void doctorBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_doctorBtnActionPerformed
        String nombre, especialidad;
        nombre = JOptionPane.showInputDialog(null, "Ingrese el nombre del doctor");
        especialidad = JOptionPane.showInputDialog(null, "Introduzca la especialidad del doctor");
        if ((nombre == null || nombre.equals("")) || (especialidad == null || especialidad.equals(""))) {
        } else {
            doctores.add(new Doctor("" + (doctores.size() + 1), nombre, especialidad));
            updateTables();
        }
    }//GEN-LAST:event_doctorBtnActionPerformed

    private void citaBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_citaBtnActionPerformed
        String[] meses = {"01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12"};
        String[] horas = {"13", "14", "15", "16", "17", "18", "19", "20"};
        String motivo, fecha, hora;
        Paciente paciente;
        Doctor doctor;
        motivo = JOptionPane.showInputDialog(null, "Ingrese el motivo de la cita");
        if (motivo == null || motivo.equals("")) {
        } else {
            fecha = (String) JOptionPane.showInputDialog(null, "Seleccione el mes", "Elegir", JOptionPane.QUESTION_MESSAGE, null, meses, meses[0]);
            if (fecha != null) {
                hora = (String) JOptionPane.showInputDialog(null, "Seleccione la hora de la cita", "Elegir", JOptionPane.QUESTION_MESSAGE, null, horas, horas[0]);
                if (hora != null) {
                    if (pacientes.size() > 0) {
                        paciente = (Paciente) JOptionPane.showInputDialog(null, "Seleccione el paciente", "Elegir", JOptionPane.QUESTION_MESSAGE, null, pacientes.toArray(), pacientes.toArray()[0]);
                        if (paciente != null) {
                            if (doctores.size() > 0) {
                                doctor = (Doctor) JOptionPane.showInputDialog(null, "Seleccione el doctor", "Elegir", JOptionPane.QUESTION_MESSAGE, null, doctores.toArray(), doctores.toArray()[0]);
                                if (doctor != null) {
                                    citas.add(new Cita("" + (citas.size() + 1), motivo, fecha + ":" + hora, paciente.getNombre(), doctor.getNombre()));
                                    updateTables();
                                }
                            }
                        }
                    }
                }
            }
        }
    }//GEN-LAST:event_citaBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Menu().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton citaBtn;
    private javax.swing.JTextArea citasArea;
    private javax.swing.JButton doctorBtn;
    private javax.swing.JTextArea doctoresArea;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JButton pacienteBtn;
    private javax.swing.JTextArea pacientesArea;
    private javax.swing.JButton saveBtn;
    private javax.swing.JButton saveNQuitBtn;
    // End of variables declaration//GEN-END:variables

    private void updateTables() {
        citasArea.setText("");
        pacientesArea.setText("");
        doctoresArea.setText("");
        citas.forEach((t) -> {
            citasArea.append(t.toString() + "\n");
        });
        pacientes.forEach((t) -> {
            pacientesArea.append(t.toString() + "\n");
        });
        doctores.forEach((t) -> {
            doctoresArea.append(t.toString() + "\n");
        });
    }
}
